#!/bin/bash
# Calculate a new set of reference skimmers for the next night's run
# Built to be called from script updateweb

# Move to correct folder to allow cron execution on RPi
[ -d "/home/pi/rbn-server-skew" ] && cd /home/pi/rbn-server-skew

FOLDER="rbndata"
DATE=`date -u --date="1 days ago" +%Y%m%d`
OLDDATE=`date -u --date="10 days ago" +%Y%m%d`
REFFILE="reference"
TEMPFILE=$FOLDER/$DATE.ref
DELFILE=$FOLDER/$OLDDATE.ref
RESULT=$FOLDER/rbndata.txt
ZIPFILE=$FOLDER/rbndata.zip
CSVFILE=$FOLDER/rbndata.csv
TOKEN=$FOLDER/refupdated

[ -d $FOLDER ] || mkdir $FOLDER

echo "Job started "`date -u "+%F %T" `
START=$SECONDS

# Uncomment to execute always
echo "Never" > $TOKEN

# Check if we already did the work for
# today, if so, exit
[ -f $TOKEN ] || echo "Never" > $TOKEN
if [ "$DATE" == "`cat $TOKEN`" ]; then
    echo "Nothing to do."
    exit
fi

# Do the work
echo "Downloading RBN data for "`date -u --date="1 days ago" +%Y-%m-%d`

wget --quiet --no-hsts http://www.reversebeacon.net/raw_data/dl.php?f=$DATE -O $ZIPFILE

FILESIZE=$(stat -c%s $ZIPFILE)
if [[ $FILESIZE != "0" ]]; then
    gunzip < $ZIPFILE > $CSVFILE
    echo "Downloaded yesterday's "$((`wc -l < $CSVFILE` - 2))" spots into $CSVFILE"
	printf "Selecting list of reference skimmers..."
	../rbnskew/rbnskew -wqs -f $CSVFILE -c anchors > $RESULT

	echo "# Automatically generated reference file" > $TEMPFILE

	#printf "# Frequency controlled skimmers\nAC0C\nWB6BEE\nKM3T\nOE9GHV\nSM7IUN\nCX6VM\n3B8CW\nJO1YYP\n" >> $TEMPFILE

	echo "# Skimmers with 0.0ppm deviation and more than 200 qualified spots" >> $TEMPFILE
	gawk '{if ($1 == "#" && ($3 >= 0.0 ? $3 : -$3) < 0.1 && $4 > 200){print $2;}}' $RESULT | sed 's/*//g' >> $TEMPFILE

	echo "# Skimmers with 0.1ppm deviation and more than 200 qualified spots" >> $TEMPFILE
	gawk '{if ($1 == "#" && ($3 >= 0.0 ? $3 : -$3) == 0.1 && $4 > 200){print $2;}}' $RESULT | sed 's/*//g' >> $TEMPFILE

	echo "# Skimmers with 0.2ppm deviation and more than 200 qualified spots" >> $TEMPFILE
	gawk '{if ($1 == "#" && ($3 >= 0.0 ? $3 : -$3) == 0.2 && $4 > 200){print $2;}}' $RESULT | sed 's/*//g' >> $TEMPFILE

	printf "done.\n"
	cp $TEMPFILE $REFFILE
    echo $DATE > $TOKEN
	echo "Deleting "$DELFILE
	rm -f $DELFILE
	echo "Job took $((SECONDS - START)) seconds and ended "`date -u "+%F %T" `
else
    echo "Could not download yesterday's RBN data!"
    echo "Job failed "`date -u "+%F %T" `
    exit
fi

exit
